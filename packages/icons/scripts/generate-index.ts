import { createWriteStream, readdir } from "fs";
import { basename, join as pathJoin, resolve } from "path";
import { promisify } from "util";

const readdirAsync = promisify(readdir);

/**
 * Any .tsx files to explicitly exclude (non-".tsx" files are never included)
 */
const EXCLUDE = ["stories.tsx"];

/**
 * Generates an "index.ts" file that acts as an entry-point by
 * exporting all of the default exports for all React components
 * in the given directory.
 *
 * @param rootPath The path of the components.
 */
const generateIndex = async (rootPath: string) => {
  let writeStream;

  console.log(`Creating index.ts in ${rootPath}`);

  try {
    const files = await readdirAsync(rootPath);

    writeStream = createWriteStream(pathJoin(rootPath, "index.ts"));
    writeStream.write(
      "// This file is automatically generated by scripts/generateIndex.ts - do not modify it directly.\n\n"
    );

    const componentNames = files
      .filter(name => name.endsWith(".tsx") && !EXCLUDE.includes(name)) // Only React .tsx components.
      .map(name => basename(name, ".tsx")) // Extract conponent name from filename
      .sort();

    componentNames.forEach(componentName => {
      writeStream.write(
        `export { default as ${componentName} } from "./${componentName}";\n`
      );
    });
  } catch (err) {
    // console.error('Error gerr.message);
    console.error(err.message);
    console.trace(__filename);
  } finally {
    if (writeStream) {
      writeStream.end();
    }
  }
};

generateIndex(resolve(__dirname, "../src/"));
